<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<services>
	<!-- 
		Tag service's attributes: 
			pid: service.id, 
			interfaceName: service interface to be published, 
			className: service classname, if null, a proxy is created, 
			address: address where the simulation service should be available  
			
	-->
	<service pid="Provider-BBC-1" interfaceName="br.com.bb.provider.InformationProvider" address="http://192.168.1.2:8089/informationProviderBBC">
		<!-- Just a markup tag to contain attribute tags -->
		<qos>
			<!-- Tag attributes:
				name: Attribute's name
				value: published attribute value 
				operation: target operation
				simulation elements:
			-->
			<attribute name="AvgResponseTime" value="100" operation="getCotation"  >
				<!-- 
					Has intervals elements (no attributes). The ideia is that the time can be split into intervals, 
					and in each the simulated behavior can be specified differently. Ex: In the following case, 
					the simulator will always answer with the same response time (configured throgh the value attribute), 
					that is, the response time will	have a constant value -->
				<simulation>
					<!--	Attributes:
								time: 	represents the duration of that interval in ms (that is, for how long should the described behavior be simulated)
								value: 	used only in the case that the simulated response time shall be constant. In this case, it specifies the response time.
										When this is not the case, we should provide parameters to guide the simulator, as explained bellow.
								exceptionClass: used when we want to simulate the throwing of a particular business exception 
								distribution: Used to specify other simulated behaviors.
					 -->
					<interval unit="ms" time="300000" value="150">
					</interval>
					<interval unit="ms" time="300000" value="300">
					</interval>
				</simulation>
			</attribute>
			
			<attribute name="MinResponseTime" value="100" operation="getCotation" >
				<simulation>
					<interval unit="ms" time="300000">
					</interval>
					<interval unit="ms" time="10000" exceptionClass="br.com.bb.exception.OutOfScheduleException">
					</interval>
				</simulation>
			</attribute>
		</qos>
	</service>
	
	<service interfaceName="br.com.bb.provider.InformationProvider" pid="Provider-BBC-2" address="http://192.168.1.2:9089/informationProviderBBC">
		<qos>
			<attribute operation="getCotation" value="95.0" name="Availability">
				<simulation>
					<interval unit="ms" time="300000">
						<!--
							Distribution tag's attributes:
								name: Used to specify a random behavior, guided by a distribution. Each distribution requires particular parameters.
									AvgAvailability: In the availability case, just bernoulli is supported. It has unique parameter that is called mean.
									AvgResponseTime: Two possibilities here:
										1. exponential: simulates an exponential response time. Parameter: mean (value in ms)
										2. uniform: simulates an unifor distribution. Parameters: minimum and maximum (ms)
							 -->
						<distribution name="bernoulli">
							<parameter value="100.0" name="mean" />
						</distribution>
					</interval>
					<interval unit="ms" time="300000">
						<distribution name="bernoulli">
							<parameter value="0.0" name="mean" />
						</distribution>
					</interval>
				</simulation>
			</attribute>
			<attribute operation="getCotation" value="600" name="ResponseTime">
				<simulation>
					<interval unit="ms" time="600000" value="600">
					</interval>
				</simulation>
			</attribute>
		</qos>
	</service>	
	
	<service interfaceName="br.com.bb.provider.InformationProvider" pid="Provider-BBC-3" address="http://192.168.1.2:9999/informationProviderBBC">
		<qos>
			<attribute operation="getCotation" value="500" name="ResponseTime">
				<simulation>
					<interval unit="ms" time="60000" value="500">
					</interval>
					<interval unit="ms" time="60000" value="700">
					</interval>
					<interval unit="ms" time="60000" value="900">
					</interval>
					<interval unit="ms" time="420000" value="1100">
					</interval>
				</simulation>
			</attribute>
		</qos>
	</service>
	
</services>
